/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lexicoautomata;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import Clases.*;
import Clases.Gramatica;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL LATITUDE E7440
 */
public class Inicio extends javax.swing.JFrame
{

//    File archivo = new File("Pruebaaaas.txt");
    StringTokenizer st;
    String res = "";
    Tabla tab = new Tabla();
    TablaErrores tabE = new TablaErrores();
    TokensVer toks = new TokensVer();
    String Rtabla;
    int Rtabla2;
    DefaultTableModel dtm = new DefaultTableModel();
    String Gram[] = new String[1000];
    int ss = 1;

    /**
     * Creates new form Inicio
     */
    public Inicio()
    {
        initComponents();
        this.setLocationRelativeTo(null);
        AreaTexto.setEnabled(false);
        Tabla.setEnabled(false);
        String[] titulo = new String[]
        {
            "Lexema", "Token", "Renglon"
        };
        dtm.setColumnIdentifiers(titulo);
        Tabla.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AreaTexto = new javax.swing.JTextArea();
        Compilar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {},
                {},
                {},
                {}
            },
            new String []
            {

            }
        ));
        jScrollPane1.setViewportView(Tabla);

        jLabel1.setText("Seleccione el Archivo");

        jButton1.setText("Buscar...");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        AreaTexto.setColumns(20);
        AreaTexto.setRows(5);
        jScrollPane2.setViewportView(AreaTexto);

        Compilar.setText("Compilar");
        Compilar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CompilarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Compilar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Compilar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        FileWriter escribir = null;
        try
        {
            File archivo1 = new File("Pruebaaaas.txt");
            escribir = new FileWriter(archivo1);
            res = res + res.concat("{").concat("}").concat(".").concat(";").concat("(").concat(")").concat("#").concat("[").concat("]");
            res = res + res.concat("+").concat("+").concat("+");
            char num[] =
            {
                '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'
            };
            JFileChooser fc = new JFileChooser();
            AreaTexto.setText("");
            fc.showOpenDialog(null);
            File archivo = fc.getSelectedFile();
            try
            {
                FileReader fr = new FileReader(archivo);
                BufferedReader br = new BufferedReader(fr);
                String texto = "";
                String linea = "";
                String str = "";
                String com = "";
                int contR = 0;
                while (((linea = br.readLine())) != null)
                {
                    contR += 1;
                    texto += linea + "\n";
                    com = "";
                    st = new StringTokenizer(linea, res, true);
                    char renglon[] = linea.toCharArray();
                    str = "";
                    for (int i = 0; i < renglon.length; i++)
                    {

                        if (renglon[i] == '/' && renglon[i + 1] == '/')
                        {
                            for (int j = i; j < renglon.length; j++)
                            {
                                com = com + renglon[j];
                                renglon[j] = ' ';
                            }
                            Rtabla = tab.procesoMastrizTrans(com, contR);
                            if (Rtabla != null)
                            {
                                dtm.addRow(new Object[]
                                {
                                    com, Rtabla, contR
                                });
                                Gram[ss] = Rtabla;
                                ss++;
                            }

                        } else
                        {
                            com = "";
                            if (renglon[i] == '"')
                            {
                                while (true)
                                {
                                    com = com + renglon[i];
                                    renglon[i] = ' ';
                                    i++;
                                    if (renglon[i] == '"')
                                    {
                                        com = com + renglon[i];
                                        break;
                                    }

                                }
                                Rtabla = tab.procesoMastrizTrans(com, contR);
                                if (Rtabla != null)
                                {
                                    dtm.addRow(new Object[]
                                    {
                                        com, Rtabla, contR
                                    });
                                   
                                }
                            } else
                            {

                                if (renglon[i] == '+' && renglon[i + 1] == '+')
                                {
                                    renglon[i] = ' ';
                                    renglon[i + 1] = ' ';
                                    i += 2;
                                    dtm.addRow(new Object[]
                                    {
                                        "++", "61", contR
                                    });
                                    
                                } else
                                {
                                    if (renglon[i] == '-' && renglon[i + 1] == '-')
                                    {
                                        renglon[i] = ' ';
                                        renglon[i + 1] = ' ';
                                        i += 2;
                                        dtm.addRow(new Object[]
                                        {
                                            "--", "61", contR
                                        });
                                        
                                    } else
                                    {
                                        for (int j = 0; j < num.length; j++)
                                        {
                                            if (renglon[i] == num[j])
                                            {
                                                com = com + renglon[i];
                                                renglon[i] = ' ';
                                                i++;
                                                while (true)
                                                {
                                                    com = com + renglon[i];
                                                    i++;

                                                    if (renglon[i] == ' ')
                                                    {
                                                        break;
                                                    }
                                                }
                                            }
                                        }

                                        Rtabla = tab.procesoMastrizTrans(com, contR);
                                        if (Rtabla != null)
                                        {
                                            dtm.addRow(new Object[]
                                            {
                                                com, Rtabla, contR
                                            });
                                           
                                        }
                                    }

                                }
                            }

                        }
                        str = str + renglon[i];

                    }

                    str = str + "\n";
                    toksens(str, contR);
                    escribir.write(str);

                }
                
                escribir.close();
                AreaTexto.setText(texto);
//                Gramatica gram = Gramatica(Gram);
                JOptionPane.showMessageDialog(null, "Archivo leido correctamente");
            } catch (Exception e)
            {

            }
        } catch (IOException ex)
        {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);

        } finally
        {
            try
            {
                escribir.close();
            } catch (IOException ex)
            {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void CompilarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CompilarActionPerformed
    {//GEN-HEADEREND:event_CompilarActionPerformed
        for (int i = 0; i < Tabla.getRowCount(); i++)
                {
                    Gram[i] = Tabla.getValueAt(i, 1).toString();
                }
                for (int i = 0; i < Gram.length; i++)
                {
                    if (Gram[i]!= null)
                    {
//                        System.out.println(Gram[i]);
                        ss++;
                    }
                }
                String Gram2[] = new String[ss];
                for (int i = 0; i < Gram.length; i++)
                {
                    if (Gram[i]!= null)
                    {
                        Gram2[i] = Gram[i];
//                        System.out.println(Gram2[i]);
                    }
                }
                Gramatica gram = new Gramatica(Gram2);
    }//GEN-LAST:event_CompilarActionPerformed
    public void toksens(String caden, int c) throws FileNotFoundException, IOException
    {
        String s2;
        int tok;
        String separadores = "";
//        System.out.println(caden);
        separadores = separadores + separadores.concat("+").concat("{").concat("}").concat(";").concat("(").concat(")").concat("#").concat("[").concat("]").concat("-").concat(".");
        st = new StringTokenizer(caden, separadores.concat(" "), true);
        while (st.hasMoreTokens())
        {
            int count = st.countTokens();
            String[] todo = new String[count];
            String[] aldo = new String[count];
            for (int i = 0; i < count; i++)
            {
                aldo[i] = st.nextToken();
            }

            try
            {
                for (int i = 0; i < aldo.length; i++)
                {
//                    System.out.println(aldo[i]);
                    s2 = tab.procesoMastrizTrans(aldo[i], c);

                    if (s2 == null)
                    {
                        tok = toks.verifir(aldo[i]);
//                        System.out.println(tok + " " + aldo[i]);
                        if (tok != 0)
                        {
                            dtm.addRow(new Object[]
                            {
                                aldo[i], tok, c
                            });
                            aldo[i] = null;
                        } else
                        {
                            tok = toks.verSep(aldo[i]);
//                            System.out.println(tok + " " + aldo[i]);
                            if (tok != 0)
                            {
                                dtm.addRow(new Object[]
                                {
                                    aldo[i], tok, c
                                });
                                aldo[i] = null;
                            }
                        }
                    } else
                    {
                        dtm.addRow(new Object[]
                        {
                            aldo[i], s2, c
                        });
                        aldo[i] = null;
                    }
                    Gram[ss] = s2;
                    ss++;
                    
                }
            } catch (Exception e)
            {

            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaTexto;
    private javax.swing.JButton Compilar;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
